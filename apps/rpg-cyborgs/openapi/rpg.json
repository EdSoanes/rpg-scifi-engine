{
  "openapi": "3.0.1",
  "info": {
      "title": "Rpg API v1",
      "version": "1.0"
  },
  "paths": {
      "/api/rpg/{system}/{archetype}/{id}": {
          "get": {
              "tags": [
                  "v1"
              ],
              "parameters": [
                  {
                      "name": "system",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "archetype",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_String"
                              }
                          },
                          "text/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_String"
                              }
                          },
                          "text/plain": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_String"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/api/rpg/{system}/action/args": {
          "post": {
              "tags": [
                  "v1"
              ],
              "parameters": [
                  {
                      "name": "system",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ActionStepArgs"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ActionStepArgs"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ActionStepArgs"
                          }
                      },
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ActionStepArgs"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "OK",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_RpgArg[]"
                              }
                          },
                          "text/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_RpgArg[]"
                              }
                          },
                          "text/plain": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_RpgArg[]"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/api/rpg/{system}/action/autocomplete": {
          "post": {
              "tags": [
                  "v1"
              ],
              "parameters": [
                  {
                      "name": "system",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ActivityComplete"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ActivityComplete"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ActivityComplete"
                          }
                      },
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ActivityComplete"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "OK",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_Action2"
                              }
                          },
                          "text/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_Action2"
                              }
                          },
                          "text/plain": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_Action2"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/api/rpg/{system}/action/complete": {
          "post": {
              "tags": [
                  "v1"
              ],
              "parameters": [
                  {
                      "name": "system",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ActivityComplete"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ActivityComplete"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ActivityComplete"
                          }
                      },
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ActivityComplete"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "OK",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_Action2"
                              }
                          },
                          "text/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_Action2"
                              }
                          },
                          "text/plain": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_Action2"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/api/rpg/{system}/action/cost": {
          "post": {
              "tags": [
                  "v1"
              ],
              "parameters": [
                  {
                      "name": "system",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ActionStepRun"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ActionStepRun"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ActionStepRun"
                          }
                      },
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ActionStepRun"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "OK",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_Action2"
                              }
                          },
                          "text/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_Action2"
                              }
                          },
                          "text/plain": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_Action2"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/api/rpg/{system}/action/outcome": {
          "post": {
              "tags": [
                  "v1"
              ],
              "parameters": [
                  {
                      "name": "system",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ActionStepRun"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ActionStepRun"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ActionStepRun"
                          }
                      },
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ActionStepRun"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "OK",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_Action2"
                              }
                          },
                          "text/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_Action2"
                              }
                          },
                          "text/plain": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_Action2"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/api/rpg/{system}/action/perform": {
          "post": {
              "tags": [
                  "v1"
              ],
              "parameters": [
                  {
                      "name": "system",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ActionStepRun"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ActionStepRun"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ActionStepRun"
                          }
                      },
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ActionStepRun"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "OK",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_Action2"
                              }
                          },
                          "text/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_Action2"
                              }
                          },
                          "text/plain": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_Action2"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/api/rpg/{system}/action/reset": {
          "post": {
              "tags": [
                  "v1"
              ],
              "parameters": [
                  {
                      "name": "system",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ActivityComplete"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ActivityComplete"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ActivityComplete"
                          }
                      },
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ActivityComplete"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "OK",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_Action2"
                              }
                          },
                          "text/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_Action2"
                              }
                          },
                          "text/plain": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_Action2"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/api/rpg/{system}/activity/create": {
          "post": {
              "tags": [
                  "v1"
              ],
              "parameters": [
                  {
                      "name": "system",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ActivityCreate"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ActivityCreate"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ActivityCreate"
                          }
                      },
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ActivityCreate"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "OK",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_Activity2"
                              }
                          },
                          "text/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_Activity2"
                              }
                          },
                          "text/plain": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_Activity2"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/api/rpg/{system}/describe": {
          "post": {
              "tags": [
                  "v1"
              ],
              "parameters": [
                  {
                      "name": "system",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_DescribeProp"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_DescribeProp"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_DescribeProp"
                          }
                      },
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_DescribeProp"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "OK",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_PropDescription"
                              }
                          },
                          "text/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_PropDescription"
                              }
                          },
                          "text/plain": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_PropDescription"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "Bad Request"
                  }
              }
          }
      },
      "/api/rpg/{system}/entities": {
          "get": {
              "tags": [
                  "v1"
              ],
              "parameters": [
                  {
                      "name": "system",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/Server.RpgContent"
                                  }
                              }
                          },
                          "text/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/Server.RpgContent"
                                  }
                              }
                          },
                          "text/plain": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/Server.RpgContent"
                                  }
                              }
                          }
                      }
                  }
              }
          }
      },
      "/api/rpg/{system}/modset": {
          "post": {
              "tags": [
                  "v1"
              ],
              "parameters": [
                  {
                      "name": "system",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ModSet"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ModSet"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ModSet"
                          }
                      },
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_ModSet"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "OK",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_Boolean"
                              }
                          },
                          "text/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_Boolean"
                              }
                          },
                          "text/plain": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_Boolean"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/api/rpg/{system}/modset/describe": {
          "post": {
              "tags": [
                  "v1"
              ],
              "parameters": [
                  {
                      "name": "system",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_DescribeModSet"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_DescribeModSet"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_DescribeModSet"
                          }
                      },
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_DescribeModSet"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "OK",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_ModSetDescription"
                              }
                          },
                          "text/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_ModSetDescription"
                              }
                          },
                          "text/plain": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_ModSetDescription"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/api/rpg/{system}/state": {
          "post": {
              "tags": [
                  "v1"
              ],
              "parameters": [
                  {
                      "name": "system",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_SetState"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_SetState"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_SetState"
                          }
                      },
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_SetState"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "OK",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_String"
                              }
                          },
                          "text/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_String"
                              }
                          },
                          "text/plain": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_String"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/api/rpg/{system}/state/describe": {
          "post": {
              "tags": [
                  "v1"
              ],
              "parameters": [
                  {
                      "name": "system",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_DescribeState"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_DescribeState"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_DescribeState"
                          }
                      },
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_DescribeState"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "OK",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_ModSetDescription"
                              }
                          },
                          "text/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_ModSetDescription"
                              }
                          },
                          "text/plain": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_ModSetDescription"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/api/rpg/{system}/time": {
          "post": {
              "tags": [
                  "v1"
              ],
              "parameters": [
                  {
                      "name": "system",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_PointInTime"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_PointInTime"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_PointInTime"
                          }
                      },
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/Server.RpgRequest_PointInTime"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "OK",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_PointInTime"
                              }
                          },
                          "text/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_PointInTime"
                              }
                          },
                          "text/plain": {
                              "schema": {
                                  "$ref": "#/components/schemas/Server.RpgResponse_PointInTime"
                              }
                          }
                      }
                  }
              }
          }
      }
  },
  "components": {
      "schemas": {
          "Actions2.Action2": {
              "required": [
                  "actionArgs",
                  "actionNo",
                  "actionOwnerId",
                  "actionTemplateName",
                  "costModSet",
                  "initiatorId",
                  "isComplete",
                  "isCostDone",
                  "isOutcomeDone",
                  "isPerformDone",
                  "isStarted",
                  "outcomeActions",
                  "outcomeModSet",
                  "outcomeStates",
                  "status"
              ],
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/RpgObject"
                  }
              ],
              "properties": {
                  "actionTemplateName": {
                      "type": "string",
                      "readOnly": true
                  },
                  "actionNo": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                  },
                  "actionOwnerId": {
                      "type": "string",
                      "readOnly": true
                  },
                  "initiatorId": {
                      "type": "string",
                      "readOnly": true
                  },
                  "actionArgs": {
                      "type": "array",
                      "items": {
                          "oneOf": [
                              {
                                  "$ref": "#/components/schemas/Reflection.Args.DefaultArg"
                              },
                              {
                                  "$ref": "#/components/schemas/Reflection.Args.DiceArg"
                              },
                              {
                                  "$ref": "#/components/schemas/Reflection.Args.IntegerArg"
                              },
                              {
                                  "$ref": "#/components/schemas/Reflection.Args.RpgObjectArg"
                              }
                          ]
                      },
                      "readOnly": true
                  },
                  "isCostDone": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isPerformDone": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isOutcomeDone": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "costModSet": {
                      "oneOf": [
                          {
                              "$ref": "#/components/schemas/Mods.ModSet"
                          },
                          {
                              "$ref": "#/components/schemas/Mods.ModSets.StateModSet"
                          },
                          {
                              "$ref": "#/components/schemas/Mods.ModSets.SyncedModSet"
                          },
                          {
                              "$ref": "#/components/schemas/Mods.ModSets.TimedModSet"
                          },
                          {
                              "$ref": "#/components/schemas/Mods.ModSets.TurnModSet"
                          }
                      ],
                      "readOnly": true
                  },
                  "outcomeModSet": {
                      "oneOf": [
                          {
                              "$ref": "#/components/schemas/Mods.ModSet"
                          },
                          {
                              "$ref": "#/components/schemas/Mods.ModSets.StateModSet"
                          },
                          {
                              "$ref": "#/components/schemas/Mods.ModSets.SyncedModSet"
                          },
                          {
                              "$ref": "#/components/schemas/Mods.ModSets.TimedModSet"
                          },
                          {
                              "$ref": "#/components/schemas/Mods.ModSets.TurnModSet"
                          }
                      ],
                      "readOnly": true
                  },
                  "outcomeStates": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/States.StateRef"
                      },
                      "readOnly": true
                  },
                  "outcomeActions": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/Actions2.ActionRef"
                      },
                      "readOnly": true
                  },
                  "status": {
                      "$ref": "#/components/schemas/Actions2.ActionStatus"
                  },
                  "isStarted": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isComplete": {
                      "type": "boolean",
                      "readOnly": true
                  }
              },
              "additionalProperties": false
          },
          "Actions2.ActionRef": {
              "required": [
                  "action",
                  "actionOwnerId",
                  "activityId",
                  "optional"
              ],
              "type": "object",
              "properties": {
                  "activityId": {
                      "type": "string"
                  },
                  "actionOwnerId": {
                      "type": "string"
                  },
                  "action": {
                      "type": "string"
                  },
                  "optional": {
                      "type": "boolean"
                  }
              },
              "additionalProperties": false
          },
          "Actions2.ActionStatus": {
              "enum": [
                  "CannotStart",
                  "CanStart",
                  "CanAutoComplete",
                  "Started",
                  "CanComplete",
                  "Completed"
              ],
              "type": "string"
          },
          "Actions2.ActionTemplate_Actor": {
              "required": [
                  "canPerformMethod",
                  "costMethod",
                  "id",
                  "name",
                  "outcomeMethod",
                  "ownerArchetype",
                  "ownerId",
                  "performMethod"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "type": "string",
                      "readOnly": true
                  },
                  "name": {
                      "type": "string",
                      "readOnly": true
                  },
                  "ownerId": {
                      "type": "string",
                      "readOnly": true
                  },
                  "ownerArchetype": {
                      "type": "string",
                      "readOnly": true
                  },
                  "canPerformMethod": {
                      "$ref": "#/components/schemas/Reflection.RpgMethod_ActionTemplate_Boolean"
                  },
                  "costMethod": {
                      "$ref": "#/components/schemas/Reflection.RpgMethod_ActionTemplate_Boolean"
                  },
                  "performMethod": {
                      "$ref": "#/components/schemas/Reflection.RpgMethod_ActionTemplate_Boolean"
                  },
                  "outcomeMethod": {
                      "$ref": "#/components/schemas/Reflection.RpgMethod_ActionTemplate_Boolean"
                  }
              },
              "additionalProperties": false
          },
          "Actions2.ActionTemplate_MeleeWeapon": {
              "required": [
                  "canPerformMethod",
                  "costMethod",
                  "id",
                  "name",
                  "outcomeMethod",
                  "ownerArchetype",
                  "ownerId",
                  "performMethod"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "type": "string",
                      "readOnly": true
                  },
                  "name": {
                      "type": "string",
                      "readOnly": true
                  },
                  "ownerId": {
                      "type": "string",
                      "readOnly": true
                  },
                  "ownerArchetype": {
                      "type": "string",
                      "readOnly": true
                  },
                  "canPerformMethod": {
                      "$ref": "#/components/schemas/Reflection.RpgMethod_ActionTemplate_Boolean"
                  },
                  "costMethod": {
                      "$ref": "#/components/schemas/Reflection.RpgMethod_ActionTemplate_Boolean"
                  },
                  "performMethod": {
                      "$ref": "#/components/schemas/Reflection.RpgMethod_ActionTemplate_Boolean"
                  },
                  "outcomeMethod": {
                      "$ref": "#/components/schemas/Reflection.RpgMethod_ActionTemplate_Boolean"
                  }
              },
              "additionalProperties": false
          },
          "Actions2.ActionTemplate_RangedWeapon": {
              "required": [
                  "canPerformMethod",
                  "costMethod",
                  "id",
                  "name",
                  "outcomeMethod",
                  "ownerArchetype",
                  "ownerId",
                  "performMethod"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "type": "string",
                      "readOnly": true
                  },
                  "name": {
                      "type": "string",
                      "readOnly": true
                  },
                  "ownerId": {
                      "type": "string",
                      "readOnly": true
                  },
                  "ownerArchetype": {
                      "type": "string",
                      "readOnly": true
                  },
                  "canPerformMethod": {
                      "$ref": "#/components/schemas/Reflection.RpgMethod_ActionTemplate_Boolean"
                  },
                  "costMethod": {
                      "$ref": "#/components/schemas/Reflection.RpgMethod_ActionTemplate_Boolean"
                  },
                  "performMethod": {
                      "$ref": "#/components/schemas/Reflection.RpgMethod_ActionTemplate_Boolean"
                  },
                  "outcomeMethod": {
                      "$ref": "#/components/schemas/Reflection.RpgMethod_ActionTemplate_Boolean"
                  }
              },
              "additionalProperties": false
          },
          "Actions2.ActionTemplate_RpgEntity": {
              "required": [
                  "canPerformMethod",
                  "costMethod",
                  "id",
                  "name",
                  "outcomeMethod",
                  "ownerArchetype",
                  "ownerId",
                  "performMethod"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "type": "string",
                      "readOnly": true
                  },
                  "name": {
                      "type": "string",
                      "readOnly": true
                  },
                  "ownerId": {
                      "type": "string",
                      "readOnly": true
                  },
                  "ownerArchetype": {
                      "type": "string",
                      "readOnly": true
                  },
                  "canPerformMethod": {
                      "$ref": "#/components/schemas/Reflection.RpgMethod_ActionTemplate_Boolean"
                  },
                  "costMethod": {
                      "$ref": "#/components/schemas/Reflection.RpgMethod_ActionTemplate_Boolean"
                  },
                  "performMethod": {
                      "$ref": "#/components/schemas/Reflection.RpgMethod_ActionTemplate_Boolean"
                  },
                  "outcomeMethod": {
                      "$ref": "#/components/schemas/Reflection.RpgMethod_ActionTemplate_Boolean"
                  }
              },
              "additionalProperties": false
          },
          "Actions2.Activity2": {
              "required": [
                  "actions",
                  "activityNo",
                  "canAutoComplete",
                  "currentActionNo"
              ],
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/RpgObject"
                  }
              ],
              "properties": {
                  "activityNo": {
                      "type": "integer",
                      "format": "int32"
                  },
                  "actions": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/Actions2.Action2"
                      },
                      "readOnly": true
                  },
                  "canAutoComplete": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "currentActionNo": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                  }
              },
              "additionalProperties": false
          },
          "Behaviors.Add": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Behaviors.BaseBehavior"
                  }
              ],
              "additionalProperties": false
          },
          "Behaviors.BaseBehavior": {
              "required": [
                  "scope"
              ],
              "type": "object",
              "properties": {
                  "scope": {
                      "$ref": "#/components/schemas/Mods.ModScope"
                  }
              },
              "additionalProperties": false
          },
          "Behaviors.Combine": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Behaviors.BaseBehavior"
                  }
              ],
              "additionalProperties": false
          },
          "Behaviors.ExpiresOn": {
              "required": [
                  "value"
              ],
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Behaviors.BaseBehavior"
                  }
              ],
              "properties": {
                  "value": {
                      "$ref": "#/components/schemas/Values.Dice"
                  }
              },
              "additionalProperties": false
          },
          "Behaviors.Highest": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Behaviors.BaseBehavior"
                  }
              ],
              "additionalProperties": false
          },
          "Behaviors.Replace": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Behaviors.BaseBehavior"
                  }
              ],
              "additionalProperties": false
          },
          "Behaviors.Threshold": {
              "required": [
                  "max",
                  "min"
              ],
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Behaviors.BaseBehavior"
                  }
              ],
              "properties": {
                  "min": {
                      "type": "integer",
                      "format": "int32"
                  },
                  "max": {
                      "type": "integer",
                      "format": "int32"
                  }
              },
              "additionalProperties": false
          },
          "Cyborgs.Actions.ArmourCheck": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Actions2.ActionTemplate_Actor"
                  }
              ],
              "additionalProperties": false
          },
          "Cyborgs.Actions.MeleeAttack": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Actions2.ActionTemplate_MeleeWeapon"
                  }
              ],
              "additionalProperties": false
          },
          "Cyborgs.Actions.MeleeParry": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Actions2.ActionTemplate_Actor"
                  }
              ],
              "additionalProperties": false
          },
          "Cyborgs.Actions.RangedAttack": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Actions2.ActionTemplate_RangedWeapon"
                  }
              ],
              "additionalProperties": false
          },
          "Cyborgs.Actions.TakeDamage": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Actions2.ActionTemplate_Actor"
                  }
              ],
              "additionalProperties": false
          },
          "Cyborgs.Actions.TakeInjury": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Actions2.ActionTemplate_Actor"
                  }
              ],
              "additionalProperties": false
          },
          "Cyborgs.Actions.Transfer": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Actions2.ActionTemplate_RpgEntity"
                  }
              ],
              "additionalProperties": false
          },
          "Cyborgs.Actor": {
              "required": [
                  "actionPoints",
                  "actionTemplates",
                  "agility",
                  "archetype",
                  "archetypes",
                  "armourRating",
                  "brains",
                  "charisma",
                  "currentActionPoints",
                  "currentFocusPoints",
                  "currentLifePoints",
                  "currentLuckPoints",
                  "currentStaminaPoints",
                  "defence",
                  "expiry",
                  "focusPoints",
                  "hands",
                  "head",
                  "health",
                  "id",
                  "insight",
                  "leftArm",
                  "leftLeg",
                  "lifePoints",
                  "luckPoints",
                  "meleeAttack",
                  "modSets",
                  "name",
                  "parryDamageReduction",
                  "props",
                  "rangedAimBonus",
                  "rangedAttack",
                  "reactions",
                  "rightArm",
                  "rightLeg",
                  "staminaPoints",
                  "states",
                  "strength",
                  "torso",
                  "unarmedDamageBonus",
                  "wearing"
              ],
              "type": "object",
              "properties": {
                  "expiry": {
                      "$ref": "#/components/schemas/Time.LifecycleExpiry"
                  },
                  "modSets": {
                      "type": "object",
                      "additionalProperties": {
                          "oneOf": [
                              {
                                  "$ref": "#/components/schemas/Mods.ModSet"
                              },
                              {
                                  "$ref": "#/components/schemas/Mods.ModSets.StateModSet"
                              },
                              {
                                  "$ref": "#/components/schemas/Mods.ModSets.SyncedModSet"
                              },
                              {
                                  "$ref": "#/components/schemas/Mods.ModSets.TimedModSet"
                              },
                              {
                                  "$ref": "#/components/schemas/Mods.ModSets.TurnModSet"
                              }
                          ]
                      }
                  },
                  "props": {
                      "type": "object",
                      "additionalProperties": {
                          "$ref": "#/components/schemas/Props.Prop"
                      }
                  },
                  "states": {
                      "type": "object",
                      "additionalProperties": {
                          "oneOf": [
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.Aiming"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.Exhausted"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.Firing"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.MeleeAttacked"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.MeleeAttacking"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.Moving"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.Parrying"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.RangedAttacking"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.VeryFast"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Attachable"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Bleeding"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Dead"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Dying"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Fixable"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Pain"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Repairable"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Replaceable"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Shock"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Treatable"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Unconscious"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Unusable"
                              }
                          ]
                      }
                  },
                  "id": {
                      "type": "string",
                      "readOnly": true
                  },
                  "ownerId": {
                      "type": "string",
                      "nullable": true,
                      "readOnly": true
                  },
                  "archetype": {
                      "type": "string",
                      "readOnly": true
                  },
                  "name": {
                      "type": "string",
                      "readOnly": true
                  },
                  "archetypes": {
                      "type": "array",
                      "items": {
                          "type": "string"
                      },
                      "readOnly": true
                  },
                  "actionTemplates": {
                      "type": "object",
                      "additionalProperties": {
                          "oneOf": [
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Skills.Movement.Run"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Skills.Combat.Aim"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Actions.ArmourCheck"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Actions.MeleeAttack"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Actions.MeleeParry"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Actions.RangedAttack"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Actions.TakeDamage"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Actions.TakeInjury"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Actions.Transfer"
                              }
                          ]
                      },
                      "readOnly": true
                  },
                  "strength": {
                      "$ref": "#/components/schemas/Cyborgs.Components.PropValue"
                  },
                  "agility": {
                      "$ref": "#/components/schemas/Cyborgs.Components.PropValue"
                  },
                  "health": {
                      "$ref": "#/components/schemas/Cyborgs.Components.PropValue"
                  },
                  "brains": {
                      "$ref": "#/components/schemas/Cyborgs.Components.PropValue"
                  },
                  "insight": {
                      "$ref": "#/components/schemas/Cyborgs.Components.PropValue"
                  },
                  "charisma": {
                      "$ref": "#/components/schemas/Cyborgs.Components.PropValue"
                  },
                  "focusPoints": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                  },
                  "currentFocusPoints": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                  },
                  "luckPoints": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                  },
                  "currentLuckPoints": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                  },
                  "staminaPoints": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                  },
                  "currentStaminaPoints": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                  },
                  "lifePoints": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                  },
                  "currentLifePoints": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                  },
                  "actionPoints": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                  },
                  "currentActionPoints": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                  },
                  "head": {
                      "$ref": "#/components/schemas/Cyborgs.BodyPart"
                  },
                  "torso": {
                      "$ref": "#/components/schemas/Cyborgs.BodyPart"
                  },
                  "leftArm": {
                      "$ref": "#/components/schemas/Cyborgs.BodyPart"
                  },
                  "rightArm": {
                      "$ref": "#/components/schemas/Cyborgs.BodyPart"
                  },
                  "leftLeg": {
                      "$ref": "#/components/schemas/Cyborgs.BodyPart"
                  },
                  "rightLeg": {
                      "$ref": "#/components/schemas/Cyborgs.BodyPart"
                  },
                  "reactions": {
                      "$ref": "#/components/schemas/Cyborgs.Components.PropValue"
                  },
                  "defence": {
                      "$ref": "#/components/schemas/Cyborgs.Components.PropValue"
                  },
                  "armourRating": {
                      "$ref": "#/components/schemas/Cyborgs.Components.PropValue"
                  },
                  "unarmedDamageBonus": {
                      "$ref": "#/components/schemas/Cyborgs.Components.PropValue"
                  },
                  "parryDamageReduction": {
                      "$ref": "#/components/schemas/Cyborgs.Components.PropValue"
                  },
                  "rangedAttack": {
                      "$ref": "#/components/schemas/Cyborgs.Components.PropValue"
                  },
                  "rangedAimBonus": {
                      "$ref": "#/components/schemas/Cyborgs.Components.PropValue"
                  },
                  "meleeAttack": {
                      "$ref": "#/components/schemas/Cyborgs.Components.PropValue"
                  },
                  "hands": {
                      "$ref": "#/components/schemas/RpgContainer"
                  },
                  "wearing": {
                      "$ref": "#/components/schemas/RpgContainer"
                  }
              },
              "additionalProperties": false
          },
          "Cyborgs.Armour": {
              "required": [
                  "armourRating",
                  "currentArmourRating",
                  "defenceModifier"
              ],
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/RpgEntity"
                  }
              ],
              "properties": {
                  "armourRating": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                  },
                  "currentArmourRating": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                  },
                  "defenceModifier": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                  }
              },
              "additionalProperties": false
          },
          "Cyborgs.BodyPart": {
              "required": [
                  "bodyPartType",
                  "injuries",
                  "injurySeverity"
              ],
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/RpgComponent"
                  }
              ],
              "properties": {
                  "injurySeverity": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                  },
                  "injuries": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/Cyborgs.Injury"
                      },
                      "readOnly": true
                  },
                  "bodyPartType": {
                      "$ref": "#/components/schemas/Cyborgs.BodyPartType"
                  }
              },
              "additionalProperties": false
          },
          "Cyborgs.BodyPartType": {
              "enum": [
                  "Limb",
                  "Torso",
                  "Head"
              ],
              "type": "string"
          },
          "Cyborgs.Components.PropValue": {
              "required": [
                  "baseValue",
                  "initValue",
                  "value"
              ],
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/RpgComponent"
                  }
              ],
              "properties": {
                  "value": {
                      "type": "integer",
                      "format": "int32"
                  },
                  "initValue": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                  },
                  "baseValue": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                  }
              },
              "additionalProperties": false
          },
          "Cyborgs.Conditions.Attachable": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Cyborgs.Conditions.Condition_BodyPart"
                  }
              ],
              "additionalProperties": false
          },
          "Cyborgs.Conditions.Bleeding": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Cyborgs.Conditions.Condition_BodyPart"
                  }
              ],
              "additionalProperties": false
          },
          "Cyborgs.Conditions.Condition_Actor": {
              "required": [
                  "expiry",
                  "id",
                  "isOn",
                  "isOnConditionally",
                  "isOnManually",
                  "isOnTimed",
                  "isPlayerVisible",
                  "name",
                  "ownerId",
                  "removeOnActions"
              ],
              "type": "object",
              "properties": {
                  "expiry": {
                      "$ref": "#/components/schemas/Time.LifecycleExpiry"
                  },
                  "id": {
                      "type": "string",
                      "readOnly": true
                  },
                  "name": {
                      "type": "string",
                      "readOnly": true
                  },
                  "ownerId": {
                      "type": "string",
                      "readOnly": true
                  },
                  "ownerArchetype": {
                      "type": "string",
                      "nullable": true,
                      "readOnly": true
                  },
                  "isPlayerVisible": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isOn": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isOnTimed": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isOnManually": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isOnConditionally": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "removeOnActions": {
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  }
              },
              "additionalProperties": false
          },
          "Cyborgs.Conditions.Condition_BodyPart": {
              "required": [
                  "expiry",
                  "id",
                  "isOn",
                  "isOnConditionally",
                  "isOnManually",
                  "isOnTimed",
                  "isPlayerVisible",
                  "name",
                  "ownerId",
                  "removeOnActions"
              ],
              "type": "object",
              "properties": {
                  "expiry": {
                      "$ref": "#/components/schemas/Time.LifecycleExpiry"
                  },
                  "id": {
                      "type": "string",
                      "readOnly": true
                  },
                  "name": {
                      "type": "string",
                      "readOnly": true
                  },
                  "ownerId": {
                      "type": "string",
                      "readOnly": true
                  },
                  "ownerArchetype": {
                      "type": "string",
                      "nullable": true,
                      "readOnly": true
                  },
                  "isPlayerVisible": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isOn": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isOnTimed": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isOnManually": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isOnConditionally": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "removeOnActions": {
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  }
              },
              "additionalProperties": false
          },
          "Cyborgs.Conditions.Dead": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Cyborgs.Conditions.Condition_BodyPart"
                  }
              ],
              "additionalProperties": false
          },
          "Cyborgs.Conditions.Dying": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Cyborgs.Conditions.Condition_Actor"
                  }
              ],
              "additionalProperties": false
          },
          "Cyborgs.Conditions.Fixable": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Cyborgs.Conditions.Condition_BodyPart"
                  }
              ],
              "additionalProperties": false
          },
          "Cyborgs.Conditions.Pain": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Cyborgs.Conditions.Condition_BodyPart"
                  }
              ],
              "additionalProperties": false
          },
          "Cyborgs.Conditions.Repairable": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Cyborgs.Conditions.Condition_BodyPart"
                  }
              ],
              "additionalProperties": false
          },
          "Cyborgs.Conditions.Replaceable": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Cyborgs.Conditions.Condition_BodyPart"
                  }
              ],
              "additionalProperties": false
          },
          "Cyborgs.Conditions.Shock": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Cyborgs.Conditions.Condition_BodyPart"
                  }
              ],
              "additionalProperties": false
          },
          "Cyborgs.Conditions.Treatable": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Cyborgs.Conditions.Condition_BodyPart"
                  }
              ],
              "additionalProperties": false
          },
          "Cyborgs.Conditions.Unconscious": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Cyborgs.Conditions.Condition_Actor"
                  }
              ],
              "additionalProperties": false
          },
          "Cyborgs.Conditions.Unusable": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Cyborgs.Conditions.Condition_BodyPart"
                  }
              ],
              "additionalProperties": false
          },
          "Cyborgs.Injury": {
              "required": [
                  "bodyPartType",
                  "id",
                  "severity"
              ],
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/RpgLifecycleObject"
                  }
              ],
              "properties": {
                  "id": {
                      "type": "string"
                  },
                  "bodyPartType": {
                      "$ref": "#/components/schemas/Cyborgs.BodyPartType"
                  },
                  "severity": {
                      "type": "integer",
                      "format": "int32"
                  }
              },
              "additionalProperties": false
          },
          "Cyborgs.MeleeWeapon": {
              "required": [
                  "damage",
                  "hitBonus"
              ],
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/RpgEntity"
                  }
              ],
              "properties": {
                  "damage": {
                      "$ref": "#/components/schemas/Values.Dice"
                  },
                  "hitBonus": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                  }
              },
              "additionalProperties": false
          },
          "Cyborgs.PlayerCharacter": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Cyborgs.Actor"
                  }
              ],
              "additionalProperties": false
          },
          "Cyborgs.RangedWeapon": {
              "required": [
                  "damage",
                  "hitBonus"
              ],
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/RpgEntity"
                  }
              ],
              "properties": {
                  "damage": {
                      "$ref": "#/components/schemas/Values.Dice"
                  },
                  "hitBonus": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                  }
              },
              "additionalProperties": false
          },
          "Cyborgs.Skills.Combat.Aim": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Cyborgs.Skills.Skill"
                  }
              ],
              "additionalProperties": false
          },
          "Cyborgs.Skills.Movement.Run": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Cyborgs.Skills.Skill"
                  }
              ],
              "additionalProperties": false
          },
          "Cyborgs.Skills.Skill": {
              "required": [
                  "canPerformMethod",
                  "costMethod",
                  "id",
                  "isIntrinsic",
                  "name",
                  "outcomeMethod",
                  "ownerArchetype",
                  "ownerId",
                  "performMethod",
                  "rating"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "type": "string",
                      "readOnly": true
                  },
                  "name": {
                      "type": "string",
                      "readOnly": true
                  },
                  "ownerId": {
                      "type": "string",
                      "readOnly": true
                  },
                  "ownerArchetype": {
                      "type": "string",
                      "readOnly": true
                  },
                  "canPerformMethod": {
                      "$ref": "#/components/schemas/Reflection.RpgMethod_ActionTemplate_Boolean"
                  },
                  "costMethod": {
                      "$ref": "#/components/schemas/Reflection.RpgMethod_ActionTemplate_Boolean"
                  },
                  "performMethod": {
                      "$ref": "#/components/schemas/Reflection.RpgMethod_ActionTemplate_Boolean"
                  },
                  "outcomeMethod": {
                      "$ref": "#/components/schemas/Reflection.RpgMethod_ActionTemplate_Boolean"
                  },
                  "rating": {
                      "type": "integer",
                      "format": "int32"
                  },
                  "isIntrinsic": {
                      "type": "boolean",
                      "readOnly": true
                  }
              },
              "additionalProperties": false
          },
          "Cyborgs.States.Aiming": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/States.State_Actor"
                  }
              ],
              "additionalProperties": false
          },
          "Cyborgs.States.Exhausted": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/States.State_Actor"
                  }
              ],
              "additionalProperties": false
          },
          "Cyborgs.States.Firing": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/States.State_RangedWeapon"
                  }
              ],
              "additionalProperties": false
          },
          "Cyborgs.States.MeleeAttacked": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/States.State_Actor"
                  }
              ],
              "additionalProperties": false
          },
          "Cyborgs.States.MeleeAttacking": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/States.State_Actor"
                  }
              ],
              "additionalProperties": false
          },
          "Cyborgs.States.Moving": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/States.State_Actor"
                  }
              ],
              "additionalProperties": false
          },
          "Cyborgs.States.Parrying": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/States.State_Actor"
                  }
              ],
              "additionalProperties": false
          },
          "Cyborgs.States.RangedAttacking": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/States.State_Actor"
                  }
              ],
              "additionalProperties": false
          },
          "Cyborgs.States.VeryFast": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/States.State_Actor"
                  }
              ],
              "additionalProperties": false
          },
          "Mods.Mod": {
              "required": [
                  "behavior",
                  "entityId",
                  "expiry",
                  "id",
                  "isActive",
                  "isApplied",
                  "isBaseInitMod",
                  "isBaseMod",
                  "isBaseOverrideMod",
                  "isDisabled",
                  "isExpired",
                  "isPending",
                  "name",
                  "prop",
                  "source",
                  "sourceValue",
                  "target"
              ],
              "type": "object",
              "properties": {
                  "expiry": {
                      "$ref": "#/components/schemas/Time.LifecycleExpiry"
                  },
                  "id": {
                      "type": "string"
                  },
                  "ownerId": {
                      "type": "string",
                      "nullable": true,
                      "readOnly": true
                  },
                  "entityId": {
                      "type": "string",
                      "readOnly": true
                  },
                  "prop": {
                      "type": "string",
                      "readOnly": true
                  },
                  "name": {
                      "type": "string",
                      "readOnly": true
                  },
                  "behavior": {
                      "oneOf": [
                          {
                              "$ref": "#/components/schemas/Behaviors.Add"
                          },
                          {
                              "$ref": "#/components/schemas/Behaviors.Combine"
                          },
                          {
                              "$ref": "#/components/schemas/Behaviors.ExpiresOn"
                          },
                          {
                              "$ref": "#/components/schemas/Behaviors.Highest"
                          },
                          {
                              "$ref": "#/components/schemas/Behaviors.Replace"
                          },
                          {
                              "$ref": "#/components/schemas/Behaviors.Threshold"
                          }
                      ],
                      "readOnly": true
                  },
                  "target": {
                      "$ref": "#/components/schemas/Props.PropRef"
                  },
                  "source": {
                      "$ref": "#/components/schemas/Props.PropRef"
                  },
                  "sourceValue": {
                      "$ref": "#/components/schemas/Values.Dice"
                  },
                  "isBaseInitMod": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isBaseOverrideMod": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isBaseMod": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isApplied": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isDisabled": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isActive": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isPending": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isExpired": {
                      "type": "boolean",
                      "readOnly": true
                  }
              },
              "additionalProperties": false
          },
          "Mods.ModScope": {
              "enum": [
                  "Standard",
                  "ParentEntity",
                  "ChildComponents",
                  "ChildObjects"
              ],
              "type": "string"
          },
          "Mods.ModSet": {
              "required": [
                  "id",
                  "isActive",
                  "isApplied",
                  "isDisabled",
                  "mods",
                  "name"
              ],
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/RpgLifecycleObject"
                  }
              ],
              "properties": {
                  "id": {
                      "type": "string",
                      "readOnly": true
                  },
                  "ownerId": {
                      "type": "string",
                      "nullable": true
                  },
                  "name": {
                      "type": "string"
                  },
                  "isApplied": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isDisabled": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isActive": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "mods": {
                      "type": "array",
                      "items": {
                          "oneOf": [
                              {
                                  "$ref": "#/components/schemas/Mods.Mods.Base"
                              },
                              {
                                  "$ref": "#/components/schemas/Mods.Mods.Encounter"
                              },
                              {
                                  "$ref": "#/components/schemas/Mods.Mods.Initial"
                              },
                              {
                                  "$ref": "#/components/schemas/Mods.Mods.Override"
                              },
                              {
                                  "$ref": "#/components/schemas/Mods.Mods.Permanent"
                              },
                              {
                                  "$ref": "#/components/schemas/Mods.Mods.Synced"
                              },
                              {
                                  "$ref": "#/components/schemas/Mods.Mods.Threshold"
                              },
                              {
                                  "$ref": "#/components/schemas/Mods.Mods.Turn"
                              }
                          ]
                      },
                      "readOnly": true
                  }
              },
              "additionalProperties": false
          },
          "Mods.ModSetDescription": {
              "required": [
                  "name",
                  "values"
              ],
              "type": "object",
              "properties": {
                  "name": {
                      "type": "string"
                  },
                  "values": {
                      "type": "object",
                      "additionalProperties": {
                          "$ref": "#/components/schemas/Values.Dice"
                      },
                      "readOnly": true
                  }
              },
              "additionalProperties": false
          },
          "Mods.ModSets.StateModSet": {
              "required": [
                  "instanceType",
                  "stateName"
              ],
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Mods.ModSet"
                  }
              ],
              "properties": {
                  "stateName": {
                      "type": "string"
                  },
                  "instanceType": {
                      "$ref": "#/components/schemas/States.StateInstanceType"
                  }
              },
              "additionalProperties": false
          },
          "Mods.ModSets.SyncedModSet": {
              "required": [
                  "syncedToId"
              ],
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Mods.ModSet"
                  }
              ],
              "properties": {
                  "syncedToId": {
                      "type": "string"
                  }
              },
              "additionalProperties": false
          },
          "Mods.ModSets.TimedModSet": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Mods.ModSet"
                  }
              ],
              "additionalProperties": false
          },
          "Mods.ModSets.TurnModSet": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Mods.ModSets.TimedModSet"
                  }
              ],
              "additionalProperties": false
          },
          "Mods.Mods.Base": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Mods.Mods.Permanent"
                  }
              ],
              "additionalProperties": false
          },
          "Mods.Mods.Encounter": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Mods.Mods.Time"
                  }
              ],
              "additionalProperties": false
          },
          "Mods.Mods.Initial": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Mods.Mod"
                  }
              ],
              "additionalProperties": false
          },
          "Mods.Mods.Override": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Mods.Mod"
                  }
              ],
              "additionalProperties": false
          },
          "Mods.Mods.Permanent": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Mods.Mod"
                  }
              ],
              "additionalProperties": false
          },
          "Mods.Mods.Synced": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Mods.Mod"
                  }
              ],
              "additionalProperties": false
          },
          "Mods.Mods.Threshold": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Mods.Mod"
                  }
              ],
              "additionalProperties": false
          },
          "Mods.Mods.Time": {
              "required": [
                  "behavior",
                  "entityId",
                  "expiry",
                  "id",
                  "isActive",
                  "isApplied",
                  "isBaseInitMod",
                  "isBaseMod",
                  "isBaseOverrideMod",
                  "isDisabled",
                  "isExpired",
                  "isPending",
                  "name",
                  "prop",
                  "source",
                  "sourceValue",
                  "target"
              ],
              "type": "object",
              "properties": {
                  "expiry": {
                      "$ref": "#/components/schemas/Time.LifecycleExpiry"
                  },
                  "id": {
                      "type": "string"
                  },
                  "ownerId": {
                      "type": "string",
                      "nullable": true,
                      "readOnly": true
                  },
                  "entityId": {
                      "type": "string",
                      "readOnly": true
                  },
                  "prop": {
                      "type": "string",
                      "readOnly": true
                  },
                  "name": {
                      "type": "string",
                      "readOnly": true
                  },
                  "behavior": {
                      "oneOf": [
                          {
                              "$ref": "#/components/schemas/Behaviors.Add"
                          },
                          {
                              "$ref": "#/components/schemas/Behaviors.Combine"
                          },
                          {
                              "$ref": "#/components/schemas/Behaviors.ExpiresOn"
                          },
                          {
                              "$ref": "#/components/schemas/Behaviors.Highest"
                          },
                          {
                              "$ref": "#/components/schemas/Behaviors.Replace"
                          },
                          {
                              "$ref": "#/components/schemas/Behaviors.Threshold"
                          }
                      ],
                      "readOnly": true
                  },
                  "target": {
                      "$ref": "#/components/schemas/Props.PropRef"
                  },
                  "source": {
                      "$ref": "#/components/schemas/Props.PropRef"
                  },
                  "sourceValue": {
                      "$ref": "#/components/schemas/Values.Dice"
                  },
                  "isBaseInitMod": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isBaseOverrideMod": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isBaseMod": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isApplied": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isDisabled": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isActive": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isPending": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isExpired": {
                      "type": "boolean",
                      "readOnly": true
                  }
              },
              "additionalProperties": false
          },
          "Mods.Mods.Turn": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Mods.Mods.Time"
                  }
              ],
              "additionalProperties": false
          },
          "Props.ModDescription": {
              "required": [
                  "behavior",
                  "modType",
                  "sourceProp",
                  "sourceValue",
                  "value"
              ],
              "type": "object",
              "properties": {
                  "sourceProp": {
                      "$ref": "#/components/schemas/Props.PropDescription"
                  },
                  "modType": {
                      "type": "string"
                  },
                  "behavior": {
                      "type": "string"
                  },
                  "sourceValue": {
                      "$ref": "#/components/schemas/Values.Dice"
                  },
                  "value": {
                      "$ref": "#/components/schemas/Values.Dice"
                  },
                  "valueFunction": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "Props.Prop": {
              "required": [
                  "entityId",
                  "mods",
                  "name",
                  "refs",
                  "refType"
              ],
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/RpgLifecycleObject"
                  }
              ],
              "properties": {
                  "entityId": {
                      "type": "string",
                      "readOnly": true
                  },
                  "name": {
                      "type": "string",
                      "readOnly": true
                  },
                  "refType": {
                      "$ref": "#/components/schemas/Props.RefType"
                  },
                  "mods": {
                      "type": "array",
                      "items": {
                          "oneOf": [
                              {
                                  "$ref": "#/components/schemas/Mods.Mods.Base"
                              },
                              {
                                  "$ref": "#/components/schemas/Mods.Mods.Encounter"
                              },
                              {
                                  "$ref": "#/components/schemas/Mods.Mods.Initial"
                              },
                              {
                                  "$ref": "#/components/schemas/Mods.Mods.Override"
                              },
                              {
                                  "$ref": "#/components/schemas/Mods.Mods.Permanent"
                              },
                              {
                                  "$ref": "#/components/schemas/Mods.Mods.Synced"
                              },
                              {
                                  "$ref": "#/components/schemas/Mods.Mods.Threshold"
                              },
                              {
                                  "$ref": "#/components/schemas/Mods.Mods.Turn"
                              }
                          ]
                      },
                      "readOnly": true
                  },
                  "refs": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/Props.PropObjRef"
                      },
                      "readOnly": true
                  }
              },
              "additionalProperties": false
          },
          "Props.PropDescription": {
              "required": [
                  "baseValue",
                  "entityArchetype",
                  "entityId",
                  "entityName",
                  "mods",
                  "prop",
                  "rootEntityArchetype",
                  "rootEntityId",
                  "rootEntityName",
                  "rootProp",
                  "value"
              ],
              "type": "object",
              "properties": {
                  "rootEntityId": {
                      "type": "string"
                  },
                  "rootEntityName": {
                      "type": "string"
                  },
                  "rootEntityArchetype": {
                      "type": "string"
                  },
                  "rootProp": {
                      "type": "string"
                  },
                  "entityId": {
                      "type": "string"
                  },
                  "entityName": {
                      "type": "string"
                  },
                  "entityArchetype": {
                      "type": "string"
                  },
                  "prop": {
                      "type": "string"
                  },
                  "value": {
                      "$ref": "#/components/schemas/Values.Dice"
                  },
                  "baseValue": {
                      "$ref": "#/components/schemas/Values.Dice"
                  },
                  "mods": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/Props.ModDescription"
                      }
                  }
              },
              "additionalProperties": false
          },
          "Props.PropObjRef": {
              "required": [
                  "entityId"
              ],
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/RpgLifecycleObject"
                  }
              ],
              "properties": {
                  "entityId": {
                      "type": "string"
                  },
                  "ownerId": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "Props.PropRef": {
              "required": [
                  "entityId",
                  "prop"
              ],
              "type": "object",
              "properties": {
                  "entityId": {
                      "type": "string"
                  },
                  "prop": {
                      "type": "string"
                  }
              },
              "additionalProperties": false
          },
          "Props.RefType": {
              "enum": [
                  "Value",
                  "Child",
                  "Children"
              ],
              "type": "string"
          },
          "Reflection.Args.DefaultArg": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Reflection.Args.RpgArg"
                  }
              ],
              "additionalProperties": false
          },
          "Reflection.Args.DiceArg": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Reflection.Args.RpgArg"
                  }
              ],
              "additionalProperties": false
          },
          "Reflection.Args.IntegerArg": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Reflection.Args.RpgArg"
                  }
              ],
              "additionalProperties": false
          },
          "Reflection.Args.RpgArg": {
              "required": [
                  "isNullable",
                  "name",
                  "type"
              ],
              "type": "object",
              "properties": {
                  "name": {
                      "type": "string",
                      "readOnly": true
                  },
                  "type": {
                      "type": "string",
                      "readOnly": true
                  },
                  "isNullable": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "value": {
                      "nullable": true,
                      "readOnly": true
                  }
              },
              "additionalProperties": false
          },
          "Reflection.Args.RpgObjectArg": {
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Reflection.Args.RpgArg"
                  }
              ],
              "additionalProperties": false
          },
          "Reflection.RpgMethod_ActionTemplate_Boolean": {
              "required": [
                  "args",
                  "fullName",
                  "isStatic",
                  "methodName",
                  "returnIsNullable"
              ],
              "type": "object",
              "properties": {
                  "entityId": {
                      "type": "string",
                      "nullable": true,
                      "readOnly": true
                  },
                  "className": {
                      "type": "string",
                      "nullable": true,
                      "readOnly": true
                  },
                  "methodName": {
                      "type": "string",
                      "readOnly": true
                  },
                  "returnTypeName": {
                      "type": "string",
                      "nullable": true,
                      "readOnly": true
                  },
                  "returnQualifiedTypeName": {
                      "type": "string",
                      "nullable": true,
                      "readOnly": true
                  },
                  "returnIsNullable": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "args": {
                      "type": "array",
                      "items": {
                          "oneOf": [
                              {
                                  "$ref": "#/components/schemas/Reflection.Args.DefaultArg"
                              },
                              {
                                  "$ref": "#/components/schemas/Reflection.Args.DiceArg"
                              },
                              {
                                  "$ref": "#/components/schemas/Reflection.Args.IntegerArg"
                              },
                              {
                                  "$ref": "#/components/schemas/Reflection.Args.RpgObjectArg"
                              }
                          ]
                      },
                      "readOnly": true
                  },
                  "fullName": {
                      "type": "string",
                      "readOnly": true
                  },
                  "isStatic": {
                      "type": "boolean",
                      "readOnly": true
                  }
              },
              "additionalProperties": false
          },
          "RpgComponent": {
              "required": [
                  "archetype",
                  "archetypes",
                  "expiry",
                  "id",
                  "modSets",
                  "name",
                  "props",
                  "states"
              ],
              "type": "object",
              "properties": {
                  "expiry": {
                      "$ref": "#/components/schemas/Time.LifecycleExpiry"
                  },
                  "modSets": {
                      "type": "object",
                      "additionalProperties": {
                          "oneOf": [
                              {
                                  "$ref": "#/components/schemas/Mods.ModSet"
                              },
                              {
                                  "$ref": "#/components/schemas/Mods.ModSets.StateModSet"
                              },
                              {
                                  "$ref": "#/components/schemas/Mods.ModSets.SyncedModSet"
                              },
                              {
                                  "$ref": "#/components/schemas/Mods.ModSets.TimedModSet"
                              },
                              {
                                  "$ref": "#/components/schemas/Mods.ModSets.TurnModSet"
                              }
                          ]
                      }
                  },
                  "props": {
                      "type": "object",
                      "additionalProperties": {
                          "$ref": "#/components/schemas/Props.Prop"
                      }
                  },
                  "states": {
                      "type": "object",
                      "additionalProperties": {
                          "oneOf": [
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.Aiming"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.Exhausted"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.Firing"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.MeleeAttacked"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.MeleeAttacking"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.Moving"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.Parrying"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.RangedAttacking"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.VeryFast"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Attachable"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Bleeding"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Dead"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Dying"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Fixable"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Pain"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Repairable"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Replaceable"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Shock"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Treatable"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Unconscious"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Unusable"
                              }
                          ]
                      }
                  },
                  "id": {
                      "type": "string",
                      "readOnly": true
                  },
                  "ownerId": {
                      "type": "string",
                      "nullable": true,
                      "readOnly": true
                  },
                  "archetype": {
                      "type": "string",
                      "readOnly": true
                  },
                  "name": {
                      "type": "string",
                      "readOnly": true
                  },
                  "archetypes": {
                      "type": "array",
                      "items": {
                          "type": "string"
                      },
                      "readOnly": true
                  }
              },
              "additionalProperties": false
          },
          "RpgContainer": {
              "required": [
                  "contents"
              ],
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/RpgComponent"
                  }
              ],
              "properties": {
                  "contents": {
                      "type": "array",
                      "items": {
                          "oneOf": [
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Armour"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.BodyPart"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.MeleeWeapon"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.PlayerCharacter"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.RangedWeapon"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Components.PropValue"
                              },
                              {
                                  "$ref": "#/components/schemas/RpgContainer"
                              },
                              {
                                  "$ref": "#/components/schemas/Actions2.Action2"
                              },
                              {
                                  "$ref": "#/components/schemas/Actions2.Activity2"
                              }
                          ]
                      },
                      "readOnly": true
                  }
              },
              "additionalProperties": false
          },
          "RpgEntity": {
              "required": [
                  "actionTemplates",
                  "archetype",
                  "archetypes",
                  "expiry",
                  "id",
                  "modSets",
                  "name",
                  "props",
                  "states"
              ],
              "type": "object",
              "properties": {
                  "expiry": {
                      "$ref": "#/components/schemas/Time.LifecycleExpiry"
                  },
                  "modSets": {
                      "type": "object",
                      "additionalProperties": {
                          "oneOf": [
                              {
                                  "$ref": "#/components/schemas/Mods.ModSet"
                              },
                              {
                                  "$ref": "#/components/schemas/Mods.ModSets.StateModSet"
                              },
                              {
                                  "$ref": "#/components/schemas/Mods.ModSets.SyncedModSet"
                              },
                              {
                                  "$ref": "#/components/schemas/Mods.ModSets.TimedModSet"
                              },
                              {
                                  "$ref": "#/components/schemas/Mods.ModSets.TurnModSet"
                              }
                          ]
                      }
                  },
                  "props": {
                      "type": "object",
                      "additionalProperties": {
                          "$ref": "#/components/schemas/Props.Prop"
                      }
                  },
                  "states": {
                      "type": "object",
                      "additionalProperties": {
                          "oneOf": [
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.Aiming"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.Exhausted"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.Firing"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.MeleeAttacked"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.MeleeAttacking"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.Moving"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.Parrying"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.RangedAttacking"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.VeryFast"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Attachable"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Bleeding"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Dead"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Dying"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Fixable"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Pain"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Repairable"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Replaceable"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Shock"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Treatable"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Unconscious"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Unusable"
                              }
                          ]
                      }
                  },
                  "id": {
                      "type": "string",
                      "readOnly": true
                  },
                  "ownerId": {
                      "type": "string",
                      "nullable": true,
                      "readOnly": true
                  },
                  "archetype": {
                      "type": "string",
                      "readOnly": true
                  },
                  "name": {
                      "type": "string",
                      "readOnly": true
                  },
                  "archetypes": {
                      "type": "array",
                      "items": {
                          "type": "string"
                      },
                      "readOnly": true
                  },
                  "actionTemplates": {
                      "type": "object",
                      "additionalProperties": {
                          "oneOf": [
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Skills.Movement.Run"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Skills.Combat.Aim"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Actions.ArmourCheck"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Actions.MeleeAttack"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Actions.MeleeParry"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Actions.RangedAttack"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Actions.TakeDamage"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Actions.TakeInjury"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Actions.Transfer"
                              }
                          ]
                      },
                      "readOnly": true
                  }
              },
              "additionalProperties": false
          },
          "RpgGraphState": {
              "required": [
                  "entities",
                  "time"
              ],
              "type": "object",
              "properties": {
                  "entities": {
                      "type": "array",
                      "items": {
                          "oneOf": [
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Armour"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.BodyPart"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.MeleeWeapon"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.PlayerCharacter"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.RangedWeapon"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Components.PropValue"
                              },
                              {
                                  "$ref": "#/components/schemas/RpgContainer"
                              },
                              {
                                  "$ref": "#/components/schemas/Actions2.Action2"
                              },
                              {
                                  "$ref": "#/components/schemas/Actions2.Activity2"
                              }
                          ]
                      }
                  },
                  "contextId": {
                      "type": "string",
                      "nullable": true
                  },
                  "time": {
                      "$ref": "#/components/schemas/Time.Temporal"
                  }
              },
              "additionalProperties": false
          },
          "RpgLifecycleObject": {
              "required": [
                  "expiry"
              ],
              "type": "object",
              "properties": {
                  "expiry": {
                      "$ref": "#/components/schemas/Time.LifecycleExpiry"
                  }
              },
              "additionalProperties": false
          },
          "RpgObject": {
              "required": [
                  "archetype",
                  "archetypes",
                  "expiry",
                  "id",
                  "modSets",
                  "name",
                  "props",
                  "states"
              ],
              "type": "object",
              "properties": {
                  "expiry": {
                      "$ref": "#/components/schemas/Time.LifecycleExpiry"
                  },
                  "modSets": {
                      "type": "object",
                      "additionalProperties": {
                          "oneOf": [
                              {
                                  "$ref": "#/components/schemas/Mods.ModSet"
                              },
                              {
                                  "$ref": "#/components/schemas/Mods.ModSets.StateModSet"
                              },
                              {
                                  "$ref": "#/components/schemas/Mods.ModSets.SyncedModSet"
                              },
                              {
                                  "$ref": "#/components/schemas/Mods.ModSets.TimedModSet"
                              },
                              {
                                  "$ref": "#/components/schemas/Mods.ModSets.TurnModSet"
                              }
                          ]
                      }
                  },
                  "props": {
                      "type": "object",
                      "additionalProperties": {
                          "$ref": "#/components/schemas/Props.Prop"
                      }
                  },
                  "states": {
                      "type": "object",
                      "additionalProperties": {
                          "oneOf": [
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.Aiming"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.Exhausted"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.Firing"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.MeleeAttacked"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.MeleeAttacking"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.Moving"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.Parrying"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.RangedAttacking"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.States.VeryFast"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Attachable"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Bleeding"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Dead"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Dying"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Fixable"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Pain"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Repairable"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Replaceable"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Shock"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Treatable"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Unconscious"
                              },
                              {
                                  "$ref": "#/components/schemas/Cyborgs.Conditions.Unusable"
                              }
                          ]
                      }
                  },
                  "id": {
                      "type": "string",
                      "readOnly": true
                  },
                  "ownerId": {
                      "type": "string",
                      "nullable": true,
                      "readOnly": true
                  },
                  "archetype": {
                      "type": "string",
                      "readOnly": true
                  },
                  "name": {
                      "type": "string",
                      "readOnly": true
                  },
                  "archetypes": {
                      "type": "array",
                      "items": {
                          "type": "string"
                      },
                      "readOnly": true
                  }
              },
              "additionalProperties": false
          },
          "Server.Ops.ActionStep": {
              "enum": [
                  "Cost",
                  "Perform",
                  "Outcome"
              ],
              "type": "string"
          },
          "Server.Ops.ActionStepArgs": {
              "required": [
                  "actionStep",
                  "activityId"
              ],
              "type": "object",
              "properties": {
                  "activityId": {
                      "type": "string"
                  },
                  "actionStep": {
                      "$ref": "#/components/schemas/Server.Ops.ActionStep"
                  }
              },
              "additionalProperties": false
          },
          "Server.Ops.ActionStepRun": {
              "required": [
                  "activityId",
                  "args"
              ],
              "type": "object",
              "properties": {
                  "activityId": {
                      "type": "string"
                  },
                  "args": {
                      "type": "array",
                      "items": {
                          "oneOf": [
                              {
                                  "$ref": "#/components/schemas/Reflection.Args.DefaultArg"
                              },
                              {
                                  "$ref": "#/components/schemas/Reflection.Args.DiceArg"
                              },
                              {
                                  "$ref": "#/components/schemas/Reflection.Args.IntegerArg"
                              },
                              {
                                  "$ref": "#/components/schemas/Reflection.Args.RpgObjectArg"
                              }
                          ]
                      }
                  }
              },
              "additionalProperties": false
          },
          "Server.Ops.ActivityComplete": {
              "required": [
                  "activityId"
              ],
              "type": "object",
              "properties": {
                  "activityId": {
                      "type": "string"
                  }
              },
              "additionalProperties": false
          },
          "Server.Ops.ActivityCreate": {
              "required": [
                  "actionTemplate",
                  "initiatorId",
                  "ownerId"
              ],
              "type": "object",
              "properties": {
                  "initiatorId": {
                      "type": "string"
                  },
                  "ownerId": {
                      "type": "string"
                  },
                  "actionTemplate": {
                      "type": "string"
                  }
              },
              "additionalProperties": false
          },
          "Server.Ops.DescribeModSet": {
              "required": [
                  "entityId",
                  "modSetId"
              ],
              "type": "object",
              "properties": {
                  "entityId": {
                      "type": "string"
                  },
                  "modSetId": {
                      "type": "string"
                  }
              },
              "additionalProperties": false
          },
          "Server.Ops.DescribeProp": {
              "required": [
                  "entityId",
                  "prop"
              ],
              "type": "object",
              "properties": {
                  "entityId": {
                      "type": "string"
                  },
                  "prop": {
                      "type": "string"
                  }
              },
              "additionalProperties": false
          },
          "Server.Ops.DescribeState": {
              "required": [
                  "entityId",
                  "state"
              ],
              "type": "object",
              "properties": {
                  "entityId": {
                      "type": "string"
                  },
                  "state": {
                      "type": "string"
                  }
              },
              "additionalProperties": false
          },
          "Server.Ops.SetState": {
              "required": [
                  "entityId",
                  "on",
                  "state"
              ],
              "type": "object",
              "properties": {
                  "entityId": {
                      "type": "string"
                  },
                  "state": {
                      "type": "string"
                  },
                  "on": {
                      "type": "boolean"
                  }
              },
              "additionalProperties": false
          },
          "Server.RpgContent": {
              "required": [
                  "archetype",
                  "key",
                  "name",
                  "system"
              ],
              "type": "object",
              "properties": {
                  "key": {
                      "type": "string",
                      "format": "uuid"
                  },
                  "system": {
                      "type": "string"
                  },
                  "archetype": {
                      "type": "string"
                  },
                  "name": {
                      "type": "string"
                  }
              },
              "additionalProperties": false
          },
          "Server.RpgRequest_ActionStepArgs": {
              "required": [
                  "graphState",
                  "op"
              ],
              "type": "object",
              "properties": {
                  "graphState": {
                      "$ref": "#/components/schemas/RpgGraphState"
                  },
                  "op": {
                      "$ref": "#/components/schemas/Server.Ops.ActionStepArgs"
                  }
              },
              "additionalProperties": false
          },
          "Server.RpgRequest_ActionStepRun": {
              "required": [
                  "graphState",
                  "op"
              ],
              "type": "object",
              "properties": {
                  "graphState": {
                      "$ref": "#/components/schemas/RpgGraphState"
                  },
                  "op": {
                      "$ref": "#/components/schemas/Server.Ops.ActionStepRun"
                  }
              },
              "additionalProperties": false
          },
          "Server.RpgRequest_ActivityComplete": {
              "required": [
                  "graphState",
                  "op"
              ],
              "type": "object",
              "properties": {
                  "graphState": {
                      "$ref": "#/components/schemas/RpgGraphState"
                  },
                  "op": {
                      "$ref": "#/components/schemas/Server.Ops.ActivityComplete"
                  }
              },
              "additionalProperties": false
          },
          "Server.RpgRequest_ActivityCreate": {
              "required": [
                  "graphState",
                  "op"
              ],
              "type": "object",
              "properties": {
                  "graphState": {
                      "$ref": "#/components/schemas/RpgGraphState"
                  },
                  "op": {
                      "$ref": "#/components/schemas/Server.Ops.ActivityCreate"
                  }
              },
              "additionalProperties": false
          },
          "Server.RpgRequest_DescribeModSet": {
              "required": [
                  "graphState",
                  "op"
              ],
              "type": "object",
              "properties": {
                  "graphState": {
                      "$ref": "#/components/schemas/RpgGraphState"
                  },
                  "op": {
                      "$ref": "#/components/schemas/Server.Ops.DescribeModSet"
                  }
              },
              "additionalProperties": false
          },
          "Server.RpgRequest_DescribeProp": {
              "required": [
                  "graphState",
                  "op"
              ],
              "type": "object",
              "properties": {
                  "graphState": {
                      "$ref": "#/components/schemas/RpgGraphState"
                  },
                  "op": {
                      "$ref": "#/components/schemas/Server.Ops.DescribeProp"
                  }
              },
              "additionalProperties": false
          },
          "Server.RpgRequest_DescribeState": {
              "required": [
                  "graphState",
                  "op"
              ],
              "type": "object",
              "properties": {
                  "graphState": {
                      "$ref": "#/components/schemas/RpgGraphState"
                  },
                  "op": {
                      "$ref": "#/components/schemas/Server.Ops.DescribeState"
                  }
              },
              "additionalProperties": false
          },
          "Server.RpgRequest_ModSet": {
              "required": [
                  "graphState"
              ],
              "type": "object",
              "properties": {
                  "graphState": {
                      "$ref": "#/components/schemas/RpgGraphState"
                  },
                  "op": {
                      "oneOf": [
                          {
                              "$ref": "#/components/schemas/Mods.ModSet"
                          },
                          {
                              "$ref": "#/components/schemas/Mods.ModSets.StateModSet"
                          },
                          {
                              "$ref": "#/components/schemas/Mods.ModSets.SyncedModSet"
                          },
                          {
                              "$ref": "#/components/schemas/Mods.ModSets.TimedModSet"
                          },
                          {
                              "$ref": "#/components/schemas/Mods.ModSets.TurnModSet"
                          }
                      ],
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "Server.RpgRequest_PointInTime": {
              "required": [
                  "graphState",
                  "op"
              ],
              "type": "object",
              "properties": {
                  "graphState": {
                      "$ref": "#/components/schemas/RpgGraphState"
                  },
                  "op": {
                      "$ref": "#/components/schemas/Time.PointInTime"
                  }
              },
              "additionalProperties": false
          },
          "Server.RpgRequest_SetState": {
              "required": [
                  "graphState",
                  "op"
              ],
              "type": "object",
              "properties": {
                  "graphState": {
                      "$ref": "#/components/schemas/RpgGraphState"
                  },
                  "op": {
                      "$ref": "#/components/schemas/Server.Ops.SetState"
                  }
              },
              "additionalProperties": false
          },
          "Server.RpgResponse_Action2": {
              "required": [
                  "data",
                  "graphState"
              ],
              "type": "object",
              "properties": {
                  "graphState": {
                      "$ref": "#/components/schemas/RpgGraphState"
                  },
                  "data": {
                      "$ref": "#/components/schemas/Actions2.Action2"
                  }
              },
              "additionalProperties": false
          },
          "Server.RpgResponse_Activity2": {
              "required": [
                  "data",
                  "graphState"
              ],
              "type": "object",
              "properties": {
                  "graphState": {
                      "$ref": "#/components/schemas/RpgGraphState"
                  },
                  "data": {
                      "$ref": "#/components/schemas/Actions2.Activity2"
                  }
              },
              "additionalProperties": false
          },
          "Server.RpgResponse_Boolean": {
              "required": [
                  "data",
                  "graphState"
              ],
              "type": "object",
              "properties": {
                  "graphState": {
                      "$ref": "#/components/schemas/RpgGraphState"
                  },
                  "data": {
                      "type": "boolean"
                  }
              },
              "additionalProperties": false
          },
          "Server.RpgResponse_ModSetDescription": {
              "required": [
                  "data",
                  "graphState"
              ],
              "type": "object",
              "properties": {
                  "graphState": {
                      "$ref": "#/components/schemas/RpgGraphState"
                  },
                  "data": {
                      "$ref": "#/components/schemas/Mods.ModSetDescription"
                  }
              },
              "additionalProperties": false
          },
          "Server.RpgResponse_PointInTime": {
              "required": [
                  "data",
                  "graphState"
              ],
              "type": "object",
              "properties": {
                  "graphState": {
                      "$ref": "#/components/schemas/RpgGraphState"
                  },
                  "data": {
                      "$ref": "#/components/schemas/Time.PointInTime"
                  }
              },
              "additionalProperties": false
          },
          "Server.RpgResponse_PropDescription": {
              "required": [
                  "data",
                  "graphState"
              ],
              "type": "object",
              "properties": {
                  "graphState": {
                      "$ref": "#/components/schemas/RpgGraphState"
                  },
                  "data": {
                      "$ref": "#/components/schemas/Props.PropDescription"
                  }
              },
              "additionalProperties": false
          },
          "Server.RpgResponse_RpgArg[]": {
              "required": [
                  "graphState"
              ],
              "type": "object",
              "properties": {
                  "graphState": {
                      "$ref": "#/components/schemas/RpgGraphState"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "oneOf": [
                              {
                                  "$ref": "#/components/schemas/Reflection.Args.DefaultArg"
                              },
                              {
                                  "$ref": "#/components/schemas/Reflection.Args.DiceArg"
                              },
                              {
                                  "$ref": "#/components/schemas/Reflection.Args.IntegerArg"
                              },
                              {
                                  "$ref": "#/components/schemas/Reflection.Args.RpgObjectArg"
                              }
                          ]
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "Server.RpgResponse_String": {
              "required": [
                  "graphState"
              ],
              "type": "object",
              "properties": {
                  "graphState": {
                      "$ref": "#/components/schemas/RpgGraphState"
                  },
                  "data": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "States.StateActivation": {
              "required": [
                  "instanceType"
              ],
              "type": "object",
              "allOf": [
                  {
                      "$ref": "#/components/schemas/Time.Lifespan"
                  }
              ],
              "properties": {
                  "instanceType": {
                      "$ref": "#/components/schemas/States.StateInstanceType"
                  },
                  "initiatorId": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "States.StateInstanceType": {
              "enum": [
                  "Manual",
                  "Conditional",
                  "Timed"
              ],
              "type": "string"
          },
          "States.StateRef": {
              "required": [
                  "lifespan",
                  "ownerId",
                  "state"
              ],
              "type": "object",
              "properties": {
                  "ownerId": {
                      "type": "string"
                  },
                  "state": {
                      "type": "string"
                  },
                  "lifespan": {
                      "oneOf": [
                          {
                              "$ref": "#/components/schemas/Time.Lifespan"
                          },
                          {
                              "$ref": "#/components/schemas/States.StateActivation"
                          }
                      ]
                  }
              },
              "additionalProperties": false
          },
          "States.State_Actor": {
              "required": [
                  "expiry",
                  "id",
                  "isOn",
                  "isOnConditionally",
                  "isOnManually",
                  "isOnTimed",
                  "isPlayerVisible",
                  "name",
                  "ownerId"
              ],
              "type": "object",
              "properties": {
                  "expiry": {
                      "$ref": "#/components/schemas/Time.LifecycleExpiry"
                  },
                  "id": {
                      "type": "string",
                      "readOnly": true
                  },
                  "name": {
                      "type": "string",
                      "readOnly": true
                  },
                  "ownerId": {
                      "type": "string",
                      "readOnly": true
                  },
                  "ownerArchetype": {
                      "type": "string",
                      "nullable": true,
                      "readOnly": true
                  },
                  "isPlayerVisible": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isOn": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isOnTimed": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isOnManually": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isOnConditionally": {
                      "type": "boolean",
                      "readOnly": true
                  }
              },
              "additionalProperties": false
          },
          "States.State_RangedWeapon": {
              "required": [
                  "expiry",
                  "id",
                  "isOn",
                  "isOnConditionally",
                  "isOnManually",
                  "isOnTimed",
                  "isPlayerVisible",
                  "name",
                  "ownerId"
              ],
              "type": "object",
              "properties": {
                  "expiry": {
                      "$ref": "#/components/schemas/Time.LifecycleExpiry"
                  },
                  "id": {
                      "type": "string",
                      "readOnly": true
                  },
                  "name": {
                      "type": "string",
                      "readOnly": true
                  },
                  "ownerId": {
                      "type": "string",
                      "readOnly": true
                  },
                  "ownerArchetype": {
                      "type": "string",
                      "nullable": true,
                      "readOnly": true
                  },
                  "isPlayerVisible": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isOn": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isOnTimed": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isOnManually": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isOnConditionally": {
                      "type": "boolean",
                      "readOnly": true
                  }
              },
              "additionalProperties": false
          },
          "Time.LifecycleExpiry": {
              "enum": [
                  "Unset",
                  "Pending",
                  "Active",
                  "Expired",
                  "Destroyed"
              ],
              "type": "string"
          },
          "Time.Lifespan": {
              "required": [
                  "end",
                  "expired",
                  "expiry",
                  "start"
              ],
              "type": "object",
              "properties": {
                  "start": {
                      "$ref": "#/components/schemas/Time.PointInTime"
                  },
                  "end": {
                      "$ref": "#/components/schemas/Time.PointInTime"
                  },
                  "expired": {
                      "$ref": "#/components/schemas/Time.PointInTime"
                  },
                  "expiry": {
                      "$ref": "#/components/schemas/Time.LifecycleExpiry"
                  }
              },
              "additionalProperties": false
          },
          "Time.PointInTime": {
              "required": [
                  "count",
                  "isAfterEncounterTime",
                  "isEncounterTime",
                  "type"
              ],
              "type": "object",
              "properties": {
                  "type": {
                      "$ref": "#/components/schemas/Time.PointInTimeType"
                  },
                  "count": {
                      "type": "integer",
                      "format": "int32"
                  },
                  "isEncounterTime": {
                      "type": "boolean",
                      "readOnly": true
                  },
                  "isAfterEncounterTime": {
                      "type": "boolean",
                      "readOnly": true
                  }
              },
              "additionalProperties": false
          },
          "Time.PointInTimeType": {
              "enum": [
                  "BeforeTime",
                  "TimeBegins",
                  "Waiting",
                  "EncounterBegins",
                  "Turn",
                  "EncounterEnds",
                  "TimePasses",
                  "TimeEnds"
              ],
              "type": "string"
          },
          "Time.Temporal": {
              "required": [
                  "now"
              ],
              "type": "object",
              "properties": {
                  "now": {
                      "$ref": "#/components/schemas/Time.PointInTime"
                  }
              },
              "additionalProperties": false
          },
          "Umbraco.Cms.Api.Management.ViewModels.NotificationHeaderModel": {
              "required": [
                  "category",
                  "message",
                  "type"
              ],
              "type": "object",
              "properties": {
                  "message": {
                      "type": "string"
                  },
                  "category": {
                      "type": "string"
                  },
                  "type": {
                      "$ref": "#/components/schemas/Umbraco.Cms.Core.Events.EventMessageType"
                  }
              },
              "additionalProperties": false
          },
          "Umbraco.Cms.Core.Events.EventMessageType": {
              "enum": [
                  "Default",
                  "Info",
                  "Error",
                  "Success",
                  "Warning"
              ],
              "type": "string"
          },
          "Values.Dice": {
              "required": [
                  "isConstant"
              ],
              "type": "object",
              "properties": {
                  "isConstant": {
                      "type": "boolean",
                      "readOnly": true
                  }
              },
              "additionalProperties": false
          }
      },
      "securitySchemes": {
          "Backoffice User": {
              "type": "oauth2",
              "description": "Umbraco Authentication",
              "flows": {
                  "authorizationCode": {
                      "authorizationUrl": "/umbraco/management/api/v1/security/back-office/authorize",
                      "tokenUrl": "/umbraco/management/api/v1/security/back-office/token",
                      "scopes": {}
                  }
              }
          }
      }
  }
}